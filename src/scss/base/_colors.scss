/*------------------------------------*\
  #BASE__COLORS
\*------------------------------------*/

// This file contains all required variables, maps, and functions for generating and using the MUI color palette.

// Contents:
// ---------
// 1. Base Color Defs
// 2. Color Map
// 3. Color Function for implementing colors 




// |=====================================
// | 1. Base Color Defs                   
// |=====================================
// |
// | [1.1] - Main Color Palette
// | [1.2] - Secondary Color Palette
// | [1.3] - Scale amounts converted to variables to make future customization easier

// [1.1]
$color__grey: #909099;

$color__primary: #ee2d48; //e81432

$color__success: #2ED022;
$color__warning: #ffbe00;
$color__danger: #ff3d24;

// [1.2]
$color__orange: #fd720f;
$color__purple: #8f35f1;
$color__indigo: #4d5fd6;
$color__lime: #CDDC39;
$color__pink: #ef276b;
$color__teal: #47C1BF;

// [1.3]
$scale-amount--100: 90%;
$scale-amount--200: 68%;
$scale-amount--300: 40%;
$scale-amount--500: -30%;
$scale-amount--600: -68%;
$scale-amount--700: -85%;




// |=====================================
// | 2. Color Map                  
// |=====================================
// |
// | The MUI color palette utilizes the `scale-color($color, $lightness: $amount)` sass function over the common 
// | `lighten/darken` functions due to the latter functions having a tendency to blow colors out, which can result 
// | in distorted color swatches and an unnatural progression in the color scale.

$colors: (
	white: #ffffff,

	grey: (
		base: $color__grey,
		100: scale-color( $color__grey, $lightness: $scale-amount--100 ),
		200: scale-color( $color__grey, $lightness: $scale-amount--200 ),
		300: scale-color( $color__grey, $lightness: $scale-amount--300 ),
		500: scale-color( $color__grey, $lightness: $scale-amount--500 ),
		600: scale-color( $color__grey, $lightness: $scale-amount--600 ),
		700: scale-color( $color__grey, $lightness: $scale-amount--700 ),
	),

	primary: (
		base: $color__primary,
		100: scale-color( $color__primary, $lightness: $scale-amount--100 ),
		200: scale-color( $color__primary, $lightness: $scale-amount--200 ),
		300: scale-color( $color__primary, $lightness: $scale-amount--300 ),
		500: scale-color( $color__primary, $lightness: $scale-amount--500 ),
		600: scale-color( $color__primary, $lightness: $scale-amount--600 ),
		700: scale-color( $color__primary, $lightness: $scale-amount--700 ),
	),

	success: (
		base: $color__success,
		100: scale-color( $color__success, $lightness: $scale-amount--100 ),
		200: scale-color( $color__success, $lightness: $scale-amount--200 ),
		300: scale-color( $color__success, $lightness: $scale-amount--300 ),
		500: scale-color( $color__success, $lightness: $scale-amount--500 ),
		600: scale-color( $color__success, $lightness: $scale-amount--600 ),
		700: scale-color( $color__success, $lightness: $scale-amount--700 ),
	),

	warning: (
		base: $color__warning,
		100: scale-color( $color__warning, $lightness: $scale-amount--100 ),
		200: scale-color( $color__warning, $lightness: $scale-amount--200 ),
		300: scale-color( $color__warning, $lightness: $scale-amount--300 ),
		500: scale-color( $color__warning, $lightness: $scale-amount--500 ),
		600: scale-color( $color__warning, $lightness: $scale-amount--600 ),
		700: scale-color( $color__warning, $lightness: $scale-amount--700 ),
	),

	danger: (
		base: $color__danger,
		100: scale-color( $color__danger, $lightness: $scale-amount--100 ),
		200: scale-color( $color__danger, $lightness: $scale-amount--200 ),
		300: scale-color( $color__danger, $lightness: $scale-amount--300 ),
		500: scale-color( $color__danger, $lightness: $scale-amount--500 ),
		600: scale-color( $color__danger, $lightness: $scale-amount--600 ),
		700: scale-color( $color__danger, $lightness: $scale-amount--700 ),
	),


	indigo: (
		base: $color__indigo,
		100: scale-color( $color__indigo, $lightness: $scale-amount--100 ),
		200: scale-color( $color__indigo, $lightness: $scale-amount--200 ),
		300: scale-color( $color__indigo, $lightness: $scale-amount--300 ),
		500: scale-color( $color__indigo, $lightness: $scale-amount--500 ),
		600: scale-color( $color__indigo, $lightness: $scale-amount--600 ),
		700: scale-color( $color__indigo, $lightness: $scale-amount--700 ),
	),

	lime: (
		base: $color__lime,
		100: scale-color( $color__lime, $lightness: $scale-amount--100 ),
		200: scale-color( $color__lime, $lightness: $scale-amount--200 ),
		300: scale-color( $color__lime, $lightness: $scale-amount--300 ),
		500: scale-color( $color__lime, $lightness: $scale-amount--500 ),
		600: scale-color( $color__lime, $lightness: $scale-amount--600 ),
		700: scale-color( $color__lime, $lightness: $scale-amount--700 ),
	),

	orange: (
		base: $color__orange,
		100: scale-color( $color__orange, $lightness: $scale-amount--100 ),
		200: scale-color( $color__orange, $lightness: $scale-amount--200 ),
		300: scale-color( $color__orange, $lightness: $scale-amount--300 ),
		500: scale-color( $color__orange, $lightness: $scale-amount--500 ),
		600: scale-color( $color__orange, $lightness: $scale-amount--600 ),
		700: scale-color( $color__orange, $lightness: $scale-amount--700 ),
	),

	pink: (
		base: $color__pink,
		100: scale-color( $color__pink, $lightness: $scale-amount--100 ),
		200: scale-color( $color__pink, $lightness: $scale-amount--200 ),
		300: scale-color( $color__pink, $lightness: $scale-amount--300 ),
		500: scale-color( $color__pink, $lightness: $scale-amount--500 ),
		600: scale-color( $color__pink, $lightness: $scale-amount--600 ),
		700: scale-color( $color__pink, $lightness: $scale-amount--700 ),
	),

	purple: (
		base: $color__purple,
		100: scale-color( $color__purple, $lightness: $scale-amount--100 ),
		200: scale-color( $color__purple, $lightness: $scale-amount--200 ),
		300: scale-color( $color__purple, $lightness: $scale-amount--300 ),
		500: scale-color( $color__purple, $lightness: $scale-amount--500 ),
		600: scale-color( $color__purple, $lightness: $scale-amount--600 ),
		700: scale-color( $color__purple, $lightness: $scale-amount--700 ),
	),

	teal: (
		base: $color__teal,
		100: scale-color( $color__teal, $lightness: $scale-amount--100 ),
		200: scale-color( $color__teal, $lightness: $scale-amount--200 ),
		300: scale-color( $color__teal, $lightness: $scale-amount--300 ),
		500: scale-color( $color__teal, $lightness: $scale-amount--500 ),
		600: scale-color( $color__teal, $lightness: $scale-amount--600 ),
		700: scale-color( $color__teal, $lightness: $scale-amount--700 ),
	)
);




// |=====================================
// | 3. Function for implementation                
// |=====================================
// |
// | Retrieve color from `$colors` map
// |
// | !Example (color):
// | ----------------- 
// | .foo {
// | 	background: color(primary);
// | }
// |
// | !Example (color + variant):
// | -----------------------------
// | .foo {
// | 	background: color(grey, 600);
// | }


// retrieve color from $colors map ie. `color(base, primary)`
@function color($color-name, $color-variant:null) {
	// color variant is optional
	@if ($color-variant != null) {
		@return map-get(map-get($colors, $color-name), $color-variant);
	} 
  	@else if {
    	@return map-get($colors, $color-name);
  	}

  	@else {
  		@error 'Color `#{$color-name} or #{$color-variant}` not found. Available colors: #{available-names($mui-colors)}';
	}
}
